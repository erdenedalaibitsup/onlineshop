{"ast":null,"code":"var _jsxFileName = \"/Users/User1/developer/onlineshop/src/pages/admin/content/ProductAddContent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ProductAdd from \"../components/ProductAdd\";\nimport ProductControl from \"../components/Control\";\nimport { ProductContext } from '../../context/ProductCtx';\nimport { validation, validatorTypes } from '../../util/validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Proudct = () => {\n  _s();\n\n  const sizesModel = [{\n    id: \"XL\",\n    value: \"\",\n    state: \"\"\n  }, {\n    id: \"XXL\",\n    value: \"\",\n    state: \"\"\n  }];\n  const [sizes, setSizes] = React.useState(sizesModel);\n  const ctx = React.useContext(ProductContext);\n\n  const handleInputChange = event => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    const validationTypes = {};\n    const validate = validation(value, validationTypes[name] // name == \"id\" && ctx.types\n    );\n    let formValid = false;\n    const product = { ...ctx.product,\n      [name]: value\n    };\n\n    if (!validate.show) {\n      let istemvavlid = true;\n      Object.values(product).map((el, index) => {\n        if (el.length === 0 && Object.keys(ctx.product)[index] !== [name]) {\n          istemvavlid = false;\n          return;\n        }\n      });\n\n      if (istemvavlid) {\n        formValid = true;\n      }\n    }\n\n    const errorMsg = { ...ctx.errorMsg,\n      [name]: validate\n    };\n    ctx.setProduct(product);\n    ctx.setErrorMsg(errorMsg);\n    ctx.setFormValid(formValid);\n  };\n\n  const updateButtonAction = type => {\n    ctx.setType({ ...ctx.typeModel,\n      ...type\n    });\n    ctx.setUpdateAction(true);\n    ctx.setErrorMsg(ctx.errorModel);\n  };\n\n  const cancelButtonAction = () => {\n    ctx.setType(ctx.typeModel);\n    ctx.setFormValid(false);\n    ctx.setUpdateAction(false);\n    ctx.setErrorMsg(ctx.errorModel);\n  };\n\n  const handleInputSize = (event, size) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    sizes[name].value = value;\n    setSizes(sizes);\n    console.log(\"name\", sizes[name].id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: [/*#__PURE__*/_jsxDEV(ProductAdd, {\n                handleInputSize: handleInputSize,\n                sizes: sizes,\n                product: ctx.product,\n                productTypes: ctx.productTypes,\n                productSubTypes: ctx.productSubTypes,\n                errorMsg: ctx.errorMsg,\n                handleInputChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ProductControl, {\n                formValid: ctx.formValid,\n                updateAction: ctx.updateAction,\n                setUpdateAction: ctx.setUpdateAction,\n                cancelButtonAction: cancelButtonAction,\n                formValid: ctx.formValid,\n                add: ctx.addProduct\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Proudct, \"soLsTwvKdI6gceRQdHVe+8LZAiA=\");\n\n_c = Proudct;\nexport default Proudct;\n\nvar _c;\n\n$RefreshReg$(_c, \"Proudct\");","map":{"version":3,"sources":["/Users/User1/developer/onlineshop/src/pages/admin/content/ProductAddContent.js"],"names":["React","ProductAdd","ProductControl","ProductContext","validation","validatorTypes","Proudct","sizesModel","id","value","state","sizes","setSizes","useState","ctx","useContext","handleInputChange","event","target","name","validationTypes","validate","formValid","product","show","istemvavlid","Object","values","map","el","index","length","keys","errorMsg","setProduct","setErrorMsg","setFormValid","updateButtonAction","type","setType","typeModel","setUpdateAction","errorModel","cancelButtonAction","handleInputSize","size","console","log","productTypes","productSubTypes","updateAction","addProduct"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ProductAdd from \"../components/ProductAdd\";\nimport ProductControl from \"../components/Control\";\nimport { ProductContext } from '../../context/ProductCtx'\nimport { validation, validatorTypes } from '../../util/validator'\nconst Proudct = () => {\n  const sizesModel = [\n    {\n      id: \"XL\",\n      value: \"\",\n      state: \"\"\n    },\n    {\n      id: \"XXL\",\n      value: \"\",\n      state: \"\"\n    },\n  ]\n  const [sizes, setSizes] = React.useState(sizesModel)\n  const ctx = React.useContext(ProductContext);\n  const handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    const validationTypes = {\n\n    };\n    const validate = validation(\n      value,\n      validationTypes[name],\n      // name == \"id\" && ctx.types\n    );\n    let formValid = false;\n    const product = {\n      ...ctx.product,\n      [name]: value,\n    };\n    if (!validate.show) {\n      let istemvavlid = true;\n      Object.values(product).map((el, index) => {\n        if (\n          el.length === 0 &&\n          Object.keys(ctx.product)[index] !== [name]\n        ) {\n          istemvavlid = false;\n          return;\n        }\n      });\n      if (istemvavlid) {\n        formValid = true;\n      }\n    }\n    const errorMsg = {\n      ...ctx.errorMsg,\n      [name]: validate,\n    }\n\n\n    ctx.setProduct(product);\n    ctx.setErrorMsg(errorMsg);\n    ctx.setFormValid(formValid);\n  }\n\n  const updateButtonAction = (type) => {\n    ctx.setType({ ...ctx.typeModel, ...type });\n    ctx.setUpdateAction(true);\n    ctx.setErrorMsg(ctx.errorModel);\n\n  }\n\n  const cancelButtonAction = () => {\n    ctx.setType(ctx.typeModel);\n    ctx.setFormValid(false);\n    ctx.setUpdateAction(false);\n    ctx.setErrorMsg(ctx.errorModel);\n  }\n  const handleInputSize = (event, size) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    sizes[name].value = value;\n    setSizes(sizes);\n    console.log(\"name\", sizes[name].id);\n\n  }\n  return (\n    <div className=\"content-wrapper\">\n      <div>\n        <div className=\"content-header\">\n          <div className=\"container-fluid\">\n            <div className=\"row mb-2\">\n\n              <div className=\"col-12\">\n                < ProductAdd handleInputSize={handleInputSize} sizes={sizes} product={ctx.product} productTypes={ctx.productTypes} productSubTypes={ctx.productSubTypes} errorMsg={ctx.errorMsg} handleInputChange={handleInputChange} ></ProductAdd>\n                <ProductControl formValid={ctx.formValid} updateAction={ctx.updateAction} setUpdateAction={ctx.setUpdateAction}\n                  cancelButtonAction={cancelButtonAction}\n                  formValid={ctx.formValid} add={ctx.addProduct}></ProductControl>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Proudct;\n"]},"metadata":{},"sourceType":"module"}