{"ast":null,"code":"var _jsxFileName = \"/Users/User1/developer/onlineshop/src/pages/context/ProductTypeCtx.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport firebase from '../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst productTypeCon = firebase.firestore().collection('productType');\nexport const ProductTypeContext = /*#__PURE__*/React.createContext();\nexport const ProductTypeProvider = props => {\n  _s();\n\n  const [type, setType] = useState({\n    id: \"\",\n    name: \"\"\n  });\n  const [types, setTypes] = useState([{\n    id: \"\",\n    name: \"\"\n  }]);\n  const [errorMsg, setErrorMsg] = useState({\n    id: {\n      show: false\n    },\n    name: {\n      show: false\n    }\n  });\n  const [event, setEvent] = useState({\n    loading: true,\n    error: false\n  });\n  const [table, setTable] = useState({\n    loading: true,\n    error: false\n  });\n  const [formValid, setFormValid] = useState(false);\n  React.useEffect(() => {\n    getProductType();\n  }, []);\n\n  const getProductType = () => {\n    productTypeCon.get().then(collections => {\n      const datas = collections.docs.map(type => type.data());\n      setTableLoading(datas, false, false);\n      console.log(\"datas\" + datas.length);\n    }).catch(ex => {\n      console.log(\"error\" + ex);\n      setTableLoading([], false, false);\n    });\n  };\n\n  const addProductType = () => {\n    setEventLoading(type, true, false);\n    productTypeCon.doc(type.id).set(type).then(collections => {\n      const datas = collections.docs.map(type => type.data());\n      setEventLoading({}, false, false);\n      console.log(\"datas\" + datas.length);\n    }).catch(ex => {\n      console.log(\"error\" + ex);\n      setEventLoading([], false, true);\n    });\n    alert(\"amjilttai nemlee \");\n  };\n\n  const setEventLoading = (type, isLoading, error) => {\n    event.loading = isLoading;\n    event.error = error;\n    setType(type);\n    setEvent(event);\n    setType({\n      id: \"\",\n      name: \"\"\n    });\n    setFormValid(false);\n  };\n\n  const setTableLoading = (types, isLoading, error) => {\n    table.loading = isLoading;\n    table.error = error;\n    setTable(table);\n    setTypes(types);\n  };\n\n  const databaseUpdate = type => {\n    productTypeCon.doc(String(type.id)).set().then(res => {\n      alert(\"amjilttal nemlee\");\n    }).catch(ex => console.log(\"aldaa garlaa\") + ex).finally(ex => {\n      getProductType();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductTypeContext.Provider, {\n    value: {\n      types,\n      type,\n      errorMsg,\n      formValid,\n      setErrorMsg,\n      setType,\n      setFormValid,\n      addProductType\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProductTypeProvider, \"Qn60FTjpTZQmA8GAlyrNN+rDREI=\");\n\n_c = ProductTypeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductTypeProvider\");","map":{"version":3,"sources":["/Users/User1/developer/onlineshop/src/pages/context/ProductTypeCtx.js"],"names":["React","useState","firebase","productTypeCon","firestore","collection","ProductTypeContext","createContext","ProductTypeProvider","props","type","setType","id","name","types","setTypes","errorMsg","setErrorMsg","show","event","setEvent","loading","error","table","setTable","formValid","setFormValid","useEffect","getProductType","get","then","collections","datas","docs","map","data","setTableLoading","console","log","length","catch","ex","addProductType","setEventLoading","doc","set","alert","isLoading","databaseUpdate","String","res","finally","children"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport firebase from '../../firebase'\nconst productTypeCon = firebase.firestore().collection('productType');\nexport const ProductTypeContext = React.createContext();\nexport const ProductTypeProvider = (props) => {\n    const [type, setType] = useState({\n        id: \"\",\n        name: \"\"\n    });\n    const [types, setTypes] = useState([\n        {\n            id: \"\",\n            name: \"\"\n        }\n    ]);\n    const [errorMsg, setErrorMsg] = useState({\n        id: { show: false },\n        name: { show: false }\n    });\n    const [event, setEvent] = useState({\n        loading: true,\n        error: false\n    });\n\n\n    const [table, setTable] = useState({\n        loading: true,\n        error: false\n    });\n    const [formValid, setFormValid] = useState(false);\n\n    React.useEffect(() => {\n        getProductType();\n    }, []);\n\n    const getProductType = () => {\n        productTypeCon.get().then((collections) => {\n            const datas = collections.docs.map((type) => type.data());\n            setTableLoading(datas, false, false);\n            console.log(\"datas\" + datas.length);\n        }).catch((ex) => {\n            console.log(\"error\" + ex);\n            setTableLoading([], false, false);\n        });\n    }\n\n    const addProductType = () => {\n        setEventLoading(type, true, false);\n        productTypeCon.doc(type.id).set(type).then((collections) => {\n            const datas = collections.docs.map((type) => type.data());\n            setEventLoading({}, false, false);\n            console.log(\"datas\" + datas.length);\n\n        }).catch((ex) => {\n            console.log(\"error\" + ex);\n            setEventLoading([], false, true);\n        });\n\n        alert(\"amjilttai nemlee \");\n    }\n\n    const setEventLoading = (type, isLoading, error) => {\n        event.loading = isLoading;\n        event.error = error;\n        setType(type);\n        setEvent(event);\n        setType({\n            id: \"\",\n            name: \"\"\n        });\n        setFormValid(false);\n    }\n\n    const setTableLoading = (types, isLoading, error) => {\n        table.loading = isLoading;\n        table.error = error;\n        setTable(table);\n        setTypes(types);\n    }\n    const databaseUpdate = (type) => {\n        productTypeCon.doc(String(type.id)).set().then((res) => {\n            alert(\"amjilttal nemlee\");\n\n        }).catch((ex) => console.log(\"aldaa garlaa\") + ex).finally(ex => {\n            getProductType();\n        });\n    }\n\n\n    return <ProductTypeContext.Provider value={{ types, type, errorMsg, formValid, setErrorMsg, setType, setFormValid, addProductType }}>{props.children}</ProductTypeContext.Provider>\n}"]},"metadata":{},"sourceType":"module"}