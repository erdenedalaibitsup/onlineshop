{"ast":null,"code":"var _jsxFileName = \"/Users/User1/developer/onlineshop/src/pages/admin/content/ProductTypeContent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TypeTable from '../dataTable/ProductTypeTable';\nimport ProductTypeAdd from '../components/ProductTypeAdd';\nimport { ProductTypeContext } from '../../context/ProductTypeCtx';\nimport { validation, validatorTypes } from '../../util/validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductTypeContent = () => {\n  _s();\n\n  const ctx = React.useContext(ProductTypeContext);\n  console.log(\"ctx\" + ctx.type);\n  console.log(\"ctx\" + ctx.types);\n\n  const handleInputChange = event => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    const fomrType = target.type;\n    const validationTypes = {\n      price: validatorTypes.POSITIVENUMBER,\n      id: validatorTypes.EMAIL\n    }; // if (fomrType == \"file\") {\n    //     if (event.target.files[0]) {\n    //         Resizer.imageFileResizer(\n    //             event.target.files[0],\n    //             500,\n    //             500,\n    //             \"png\",\n    //             100,\n    //             0,\n    //             (uri) => {\n    //                 // console.log(uri.split(',')[1])\n    //                 this.setState({ mainimage: uri });\n    //             },\n    //             \"base64\",\n    //             200,\n    //             200\n    //         );\n    //     }\n    // }\n\n    const validate = validation(value, validationTypes[name], name == \"id\" && ctx.type);\n    let formValid = false;\n\n    if (!validate.show) {\n      let istemvavlid = true;\n      Object.values(ctx.type).map((el, index) => {\n        if (el.length == 0 && Object.keys(ctx.type)[index] != [name]) {\n          istemvavlid = false;\n          return;\n        }\n      });\n\n      if (istemvavlid) {\n        formValid = true;\n      }\n    }\n\n    const errorMsg = { ...ctx.errorMsg,\n      [name]: validate\n    };\n    const type = { ...ctx.state.type,\n      [name]: value\n    };\n    ctx.setType(type);\n    ctx.setErrorMsg(errorMsg);\n    ctx.setFormValid(formValid);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6\",\n              children: /*#__PURE__*/_jsxDEV(ProductTypeAdd, {\n                state: ctx.state,\n                addProductType: ctx.addProductType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(TypeTable, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductTypeContent, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\n\n_c = ProductTypeContent;\nexport default ProductTypeContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductTypeContent\");","map":{"version":3,"sources":["/Users/User1/developer/onlineshop/src/pages/admin/content/ProductTypeContent.js"],"names":["React","TypeTable","ProductTypeAdd","ProductTypeContext","validation","validatorTypes","ProductTypeContent","ctx","useContext","console","log","type","types","handleInputChange","event","target","value","name","fomrType","validationTypes","price","POSITIVENUMBER","id","EMAIL","validate","formValid","show","istemvavlid","Object","values","map","el","index","length","keys","errorMsg","state","setType","setErrorMsg","setFormValid","addProductType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TypeTable from '../dataTable/ProductTypeTable'\nimport ProductTypeAdd from '../components/ProductTypeAdd'\nimport { ProductTypeContext } from '../../context/ProductTypeCtx'\nimport { validation, validatorTypes } from '../../util/validator'\nconst ProductTypeContent = () => {\n    const ctx = React.useContext(ProductTypeContext);\n    console.log(\"ctx\" + ctx.type);\n    console.log(\"ctx\" + ctx.types);\n    const handleInputChange = (event) => {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        const fomrType = target.type;\n        const validationTypes = {\n            price: validatorTypes.POSITIVENUMBER,\n            id: validatorTypes.EMAIL,\n        };\n        // if (fomrType == \"file\") {\n        //     if (event.target.files[0]) {\n        //         Resizer.imageFileResizer(\n        //             event.target.files[0],\n        //             500,\n        //             500,\n        //             \"png\",\n        //             100,\n        //             0,\n        //             (uri) => {\n        //                 // console.log(uri.split(',')[1])\n        //                 this.setState({ mainimage: uri });\n        //             },\n        //             \"base64\",\n        //             200,\n        //             200\n        //         );\n        //     }\n        // }\n        const validate = validation(\n            value,\n            validationTypes[name],\n            name == \"id\" && ctx.type\n        );\n\n        let formValid = false;\n\n        if (!validate.show) {\n            let istemvavlid = true;\n            Object.values(ctx.type).map((el, index) => {\n                if (\n                    el.length == 0 &&\n                    Object.keys(ctx.type)[index] != [name]\n                ) {\n                    istemvavlid = false;\n                    return;\n                }\n            });\n            if (istemvavlid) {\n                formValid = true;\n            }\n        }\n        const errorMsg = {\n            ...ctx.errorMsg,\n            [name]: validate,\n        }\n        const type = {\n            ...ctx.state.type,\n            [name]: value,\n        };\n\n        ctx.setType(type);\n        ctx.setErrorMsg(errorMsg);\n        ctx.setFormValid(formValid);\n    }\n\n    return (\n        <div className=\"content-wrapper\">\n            <div>\n                <div className=\"content-header\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-6\">\n                                <ProductTypeAdd state={ctx.state} addProductType={ctx.addProductType}></ProductTypeAdd>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <section className=\"content\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-12\"><TypeTable></TypeTable></div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div >\n    )\n}\n\nexport default ProductTypeContent;"]},"metadata":{},"sourceType":"module"}