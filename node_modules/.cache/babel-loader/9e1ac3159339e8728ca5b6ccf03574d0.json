{"ast":null,"code":"import _objectSpread from\"/Users/User1/developer/onlineshop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import TypeTable from'../dataTable/ProductSubTypeTable';import ProductSubTypeAdd from'../components/ProductSubTypeAdd';import ProductSubTypeControl from'../components/Control';import{ProductSubTypeContext}from'../../context/ProductSubTypeCtx';import{validation,validatorTypes}from'../../util/validator';import handleInputChanger from'../handleInputChanger';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProductSubTypeContent=function ProductSubTypeContent(){var ctx=React.useContext(ProductSubTypeContext);var handleInputChange=function handleInputChange(event){var name=event.target.name;var value=event.target.value;var validationTypes={id:validatorTypes.EQUAL,name:validatorTypes.POSITIVENUMBER,size:validatorTypes.NONE};var validate=validation(value,validationTypes[name],name==\"id\"&&ctx.subTypes);handleInputChanger(event,validate,null,null,ctx.subType,ctx.errorMsg,function(type){return ctx.setSubType(type);},function(errorMsg){return ctx.setErrorMsg(errorMsg);},function(formValid){return ctx.setFormValid(formValid);});};var updateButtonAction=function updateButtonAction(subType){ctx.setSubType(_objectSpread(_objectSpread({},ctx.subTypeModel),subType));ctx.setUpdateAction(true);ctx.setErrorMsg(ctx.errorModel);};var cancelButtonAction=function cancelButtonAction(){ctx.setSubType(ctx.subTypeModel);ctx.setFormValid(false);ctx.setUpdateAction(false);ctx.setErrorMsg(ctx.errorModel);};return/*#__PURE__*/_jsx(\"div\",{className:\"content-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"content-header\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-4 shadow-none p-3 mb-5 bg-white rounded\",children:[/*#__PURE__*/_jsx(ProductSubTypeAdd,{updateAction:ctx.updateAction,errorMsg:ctx.errorMsg,subType:ctx.subType,handleInputChange:handleInputChange}),/*#__PURE__*/_jsx(ProductSubTypeControl,{updateAction:ctx.updateAction,setUpdateAction:ctx.setUpdateAction,cancelButtonAction:cancelButtonAction,formValid:ctx.formValid,add:ctx.addProductSubType,children:\" \"})]}),ctx.table.loading?/*#__PURE__*/_jsx(\"p\",{children:\"loading \"}):/*#__PURE__*/_jsx(\"div\",{className:\"col-8\",children:/*#__PURE__*/_jsx(TypeTable,{setSubType:ctx.setSubType,updateButtonAction:updateButtonAction,subTypes:ctx.subTypes})})]})})})});};export default ProductSubTypeContent;","map":{"version":3,"sources":["/Users/User1/developer/onlineshop/src/pages/admin/content/ProductSubTypeContent.js"],"names":["React","TypeTable","ProductSubTypeAdd","ProductSubTypeControl","ProductSubTypeContext","validation","validatorTypes","handleInputChanger","ProductSubTypeContent","ctx","useContext","handleInputChange","event","name","target","value","validationTypes","id","EQUAL","POSITIVENUMBER","size","NONE","validate","subTypes","subType","errorMsg","type","setSubType","setErrorMsg","formValid","setFormValid","updateButtonAction","subTypeModel","setUpdateAction","errorModel","cancelButtonAction","updateAction","addProductSubType","table","loading"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TypeTable from '../dataTable/ProductSubTypeTable'\nimport ProductSubTypeAdd from '../components/ProductSubTypeAdd'\nimport ProductSubTypeControl from '../components/Control'\nimport { ProductSubTypeContext } from '../../context/ProductSubTypeCtx'\nimport { validation, validatorTypes } from '../../util/validator'\nimport handleInputChanger from '../handleInputChanger'\nconst ProductSubTypeContent = () => {\n    const ctx = React.useContext(ProductSubTypeContext);\n    const handleInputChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        const validationTypes = {\n            id: validatorTypes.EQUAL,\n            name: validatorTypes.POSITIVENUMBER,\n            size: validatorTypes.NONE\n        };\n        const validate = validation(\n            value,\n            validationTypes[name],\n            name == \"id\" && ctx.subTypes\n        );\n        handleInputChanger(event, validate, null, null, ctx.subType, ctx.errorMsg\n            , (type) => ctx.setSubType(type), (errorMsg) => ctx.setErrorMsg(errorMsg), (formValid) => ctx.setFormValid(formValid));\n    }\n    const updateButtonAction = (subType) => {\n        ctx.setSubType({ ...ctx.subTypeModel, ...subType });\n        ctx.setUpdateAction(true);\n        ctx.setErrorMsg(ctx.errorModel);\n\n    }\n\n    const cancelButtonAction = () => {\n        ctx.setSubType(ctx.subTypeModel);\n        ctx.setFormValid(false);\n        ctx.setUpdateAction(false);\n        ctx.setErrorMsg(ctx.errorModel);\n    }\n    return (\n\n        <div className=\"content-wrapper\">\n            <div className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-4 shadow-none p-3 mb-5 bg-white rounded\" >\n                            <ProductSubTypeAdd updateAction={ctx.updateAction} errorMsg={ctx.errorMsg} subType={ctx.subType} handleInputChange={handleInputChange}></ProductSubTypeAdd>\n                            <ProductSubTypeControl updateAction={ctx.updateAction} setUpdateAction={ctx.setUpdateAction}\n                                cancelButtonAction={cancelButtonAction}\n                                formValid={ctx.formValid} add={ctx.addProductSubType}> </ProductSubTypeControl>\n                        </div>\n                        {ctx.table.loading ? <p>loading </p> :\n                            <div className=\"col-8\"><TypeTable setSubType={ctx.setSubType} updateButtonAction={updateButtonAction} subTypes={ctx.subTypes}></TypeTable></div>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default ProductSubTypeContent;"]},"metadata":{},"sourceType":"module"}