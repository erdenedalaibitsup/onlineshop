{"ast":null,"code":"var _jsxFileName = \"/Users/User1/developer/onlineshop/src/pages/context/ProductCtx.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { productCon, productSubTypeCon, productTypeCon, productStorage } from '../context/CollectionsName/names';\nimport sizeDatas, { tempdata } from '../localdata/product_size';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductContext = /*#__PURE__*/React.createContext();\nexport const ProductProvider = props => {\n  _s();\n\n  const productModel = {\n    id: \"1\",\n    link: \"\",\n    name: \"\",\n    sizes: [{}],\n    image: \"\",\n    price: \"\",\n    salePrice: \"0\",\n    typeId: \"1\",\n    subTypeId: \"\"\n  };\n  const errorModel = {\n    id: {\n      show: false\n    },\n    link: {\n      show: false\n    },\n    name: {\n      show: false\n    },\n    image: {\n      show: false\n    },\n    sizes: {\n      show: false\n    },\n    price: {\n      show: false\n    },\n    typeId: {\n      show: false\n    },\n    subTypeId: {\n      show: false\n    }\n  };\n  const [sizes, setSizes] = useState(sizeDatas);\n  const [product, setProduct] = useState(productModel);\n  const [products, setProducts] = useState(null);\n  const [productTypes, setProductTypes] = useState([]);\n  const [productSubTypes, setProductSubTypes] = useState([]);\n  const [updateAction, setUpdateAction] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(errorModel);\n  const [event, setEvent] = useState({\n    loading: true,\n    error: false\n  });\n\n  const getProducts = async () => {\n    productCon.get().then(collections => {\n      const datas = collections.docs.map(product => product.data());\n      setTableLoading(datas, false, false);\n      console.log(\"datas\" + datas.length);\n    }).catch(ex => {\n      console.log(\"error\" + ex);\n      setTableLoading([], false, false);\n    });\n  };\n\n  const getProductTypes = async () => {\n    productTypeCon.get().then(collections => {\n      const datas = collections.docs.map(product => product.data());\n      setProductTypes(datas);\n      getProductSubTypes();\n      console.log(\"datas\" + datas.length);\n    }).catch(ex => {\n      console.log(\"error\" + ex);\n      setTableLoading([], false, false);\n    });\n  };\n\n  const getProductSubTypes = async () => {\n    productSubTypeCon.get().then(collections => {\n      const datas = collections.docs.map(product => product.data());\n      setProductSubTypes(datas);\n      console.log(\"datasSub\" + datas);\n    }).catch(ex => {\n      console.log(\"error\" + ex);\n    });\n  };\n\n  React.useEffect(() => {\n    getProductTypes();\n  }, []);\n  const [table, setTable] = useState({\n    loading: true,\n    error: false\n  });\n  const [formValid, setFormValid] = useState(false);\n\n  const uploadImageFirebase = () => {\n    productStorage.ref(new Date().getTime()).putString(this.state.mainimage.split(',')[1], `base64`, {\n      contentType: `image/png`\n    }).then(responce => {\n      responce.ref.getDownloadURL().then(downloadURL => {\n        setProduct({ ...product,\n          image: downloadURL\n        });\n        addProductData();\n      });\n    }).catch(ex => {\n      setEventLoading(product, false, false);\n      alert(\"Зураг нэмхэд алдаа гарлаа\" + ex.toString());\n    }).finally();\n  };\n\n  const addProduct = () => {\n    product.sizes = sizes.filter(el => {\n      return el.selected;\n    });\n    setEventLoading(product, true, false);\n    uploadImageFirebase();\n    console.log(\"product\", product);\n  };\n\n  const addProductData = () => {\n    productCon.doc().set(product).then(collections => {\n      setUpdateAction(false);\n      setEventLoading(product, false, false);\n      setSizes(sizeDatas);\n      setSizes(tempdata);\n      setFormValid(false);\n      alert(updateAction ? \"Ажилттай заслаа\" : \"Ажилттай нэмлээ\");\n    }).catch(ex => {\n      console.log(\"error\" + ex);\n      setEventLoading(product, false, false);\n      alert(updateAction ? \"Засхад алдаа гарлаа \" : \"Нэмхэд алдаа гарлаа \");\n    });\n  };\n\n  const setEventLoading = (product, isLoading, error) => {\n    event.loading = isLoading;\n    event.error = error;\n    setEvent(event);\n    setProduct(productModel);\n    setFormValid(false);\n  };\n\n  const setTableLoading = (products, isLoading, error) => {\n    table.loading = isLoading;\n    table.error = error;\n    setTable(table);\n    setProducts(products);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: {\n      sizes,\n      setSizes,\n      errorModel,\n      productModel,\n      updateAction,\n      products,\n      table,\n      product,\n      productTypes,\n      productSubTypes,\n      errorMsg,\n      formValid,\n      event,\n      setErrorMsg,\n      setProduct,\n      setFormValid,\n      addProduct,\n      setUpdateAction,\n      getProducts\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProductProvider, \"xSiN4AjcrEMNXsPWtdgzqYppNLE=\");\n\n_c = ProductProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"sources":["/Users/User1/developer/onlineshop/src/pages/context/ProductCtx.js"],"names":["React","useState","productCon","productSubTypeCon","productTypeCon","productStorage","sizeDatas","tempdata","ProductContext","createContext","ProductProvider","props","productModel","id","link","name","sizes","image","price","salePrice","typeId","subTypeId","errorModel","show","setSizes","product","setProduct","products","setProducts","productTypes","setProductTypes","productSubTypes","setProductSubTypes","updateAction","setUpdateAction","errorMsg","setErrorMsg","event","setEvent","loading","error","getProducts","get","then","collections","datas","docs","map","data","setTableLoading","console","log","length","catch","ex","getProductTypes","getProductSubTypes","useEffect","table","setTable","formValid","setFormValid","uploadImageFirebase","ref","Date","getTime","putString","state","mainimage","split","contentType","responce","getDownloadURL","downloadURL","addProductData","setEventLoading","alert","toString","finally","addProduct","filter","el","selected","doc","set","isLoading","children"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { productCon, productSubTypeCon, productTypeCon, productStorage } from '../context/CollectionsName/names'\nimport sizeDatas, { tempdata } from '../localdata/product_size'\nexport const ProductContext = React.createContext();\nexport const ProductProvider = (props) => {\n    const productModel = {\n        id: \"1\",\n        link: \"\",\n        name: \"\",\n        sizes: [{\n        }],\n        image: \"\",\n        price: \"\",\n        salePrice: \"0\",\n        typeId: \"1\",\n        subTypeId: \"\",\n    };\n\n    const errorModel =\n    {\n        id: { show: false },\n        link: { show: false },\n        name: { show: false },\n        image: { show: false },\n        sizes: { show: false },\n        price: { show: false },\n        typeId: { show: false },\n        subTypeId: { show: false },\n    }\n\n\n    const [sizes, setSizes] = useState(sizeDatas)\n    const [product, setProduct] = useState(productModel);\n    const [products, setProducts] = useState(null);\n    const [productTypes, setProductTypes] = useState([]);\n    const [productSubTypes, setProductSubTypes] = useState([]);\n    const [updateAction, setUpdateAction] = useState(false);\n    const [errorMsg, setErrorMsg] = useState(errorModel);\n    const [event, setEvent] = useState({\n        loading: true,\n        error: false\n    });\n\n    const getProducts = async () => {\n        productCon.get().then((collections) => {\n            const datas = collections.docs.map((product) => product.data());\n            setTableLoading(datas, false, false);\n            console.log(\"datas\" + datas.length);\n        }).catch((ex) => {\n            console.log(\"error\" + ex);\n            setTableLoading([], false, false);\n        });\n\n    }\n    const getProductTypes = async () => {\n        productTypeCon.get().then((collections) => {\n            const datas = collections.docs.map((product) => product.data());\n            setProductTypes(datas);\n            getProductSubTypes();\n            console.log(\"datas\" + datas.length);\n        }).catch((ex) => {\n            console.log(\"error\" + ex);\n            setTableLoading([], false, false);\n        });\n    }\n\n    const getProductSubTypes = async () => {\n        productSubTypeCon.get().then((collections) => {\n            const datas = collections.docs.map((product) => product.data());\n            setProductSubTypes(datas);\n            console.log(\"datasSub\" + datas);\n        }).catch((ex) => {\n            console.log(\"error\" + ex);\n\n        });\n    }\n\n    React.useEffect(() => {\n        getProductTypes();\n    }, [])\n    const [table, setTable] = useState({\n        loading: true,\n        error: false\n    });\n    const [formValid, setFormValid] = useState(false);\n\n\n    const uploadImageFirebase = () => {\n        productStorage.ref(new Date().getTime()).putString(this.state.mainimage.split(',')[1], `base64`, { contentType: `image/png` }).then(responce => {\n            responce.ref.getDownloadURL().then(downloadURL => {\n                setProduct({\n                    ...product,\n                    image: downloadURL\n                });\n                addProductData();\n            });\n        }).catch(ex => {\n            setEventLoading(product, false, false);\n            alert(\"Зураг нэмхэд алдаа гарлаа\" + ex.toString());\n        }).finally();\n    }\n\n    const addProduct = () => {\n        product.sizes = sizes.filter(el => {\n            return el.selected\n        });\n        setEventLoading(product, true, false);\n        uploadImageFirebase();\n        console.log(\"product\", product);\n\n    }\n\n    const addProductData = () => {\n        productCon.doc().set(product).then((collections) => {\n            setUpdateAction(false);\n            setEventLoading(product, false, false);\n            setSizes(sizeDatas);\n            setSizes(tempdata);\n            setFormValid(false);\n            alert(updateAction ? \"Ажилттай заслаа\" : \"Ажилттай нэмлээ\");\n\n        }).catch((ex) => {\n            console.log(\"error\" + ex);\n            setEventLoading(product, false, false);\n            alert(updateAction ? \"Засхад алдаа гарлаа \" : \"Нэмхэд алдаа гарлаа \");\n        });\n    }\n\n    const setEventLoading = (product, isLoading, error) => {\n        event.loading = isLoading;\n        event.error = error;\n        setEvent(event);\n        setProduct(productModel);\n        setFormValid(false);\n    }\n\n    const setTableLoading = (products, isLoading, error) => {\n        table.loading = isLoading;\n        table.error = error;\n        setTable(table);\n        setProducts(products);\n    }\n\n\n\n    return <ProductContext.Provider value={{ sizes, setSizes, errorModel, productModel, updateAction, products, table, product, productTypes, productSubTypes, errorMsg, formValid, event, setErrorMsg, setProduct, setFormValid, addProduct, setUpdateAction, getProducts }}>{props.children}</ProductContext.Provider>\n}"]},"metadata":{},"sourceType":"module"}