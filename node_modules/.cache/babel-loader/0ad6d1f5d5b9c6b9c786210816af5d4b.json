{"ast":null,"code":"var _jsxFileName = \"/Users/User1/developer/onlineshop/src/pages/admin/content/ProductSubTypeContent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TypeTable from '../dataTable/ProductSubTypeTable';\nimport ProductSubTypeAdd from '../components/ProductSubTypeAdd';\nimport ProductSubTypeControl from '../components/Control';\nimport { ProductSubTypeContext } from '../../context/ProductSubTypeCtx';\nimport { validation, validatorTypes } from '../../util/validator';\nimport handleInputChanger from '../handleInputChanger';\nimport { Alert } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductSubTypeContent = () => {\n  _s();\n\n  const ctx = React.useContext(ProductSubTypeContext);\n  const [visibleAlert, setVisibleAlert] = React.useState(false);\n\n  const handleInputChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const validationTypes = {\n      id: validatorTypes.EQUAL,\n      name: validatorTypes.POSITIVENUMBER,\n      size: validatorTypes.NONE\n    };\n    const validate = validation(value, validationTypes[name], name == \"id\" && ctx.subTypes);\n    handleInputChanger(event, validate, null, null, ctx.subType, ctx.errorMsg, type => ctx.setSubType(type), errorMsg => ctx.setErrorMsg(errorMsg), formValid => ctx.setFormValid(formValid));\n  };\n\n  const updateButtonAction = subType => {\n    ctx.setSubType({ ...ctx.subTypeModel,\n      ...subType\n    });\n    ctx.setUpdateAction(true);\n    ctx.setErrorMsg(ctx.errorModel);\n  };\n\n  const cancelButtonAction = () => {\n    ctx.setSubType(ctx.subTypeModel);\n    ctx.setFormValid(false);\n    ctx.setUpdateAction(false);\n    ctx.setErrorMsg(ctx.errorModel);\n  };\n\n  const addProductSubType = () => {\n    ctx.addProductSubType(checkError => {\n      if (checkError) {\n        setVisibleAlert(true);\n      } else {\n        setVisibleAlert(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-wrapper\",\n    children: [visibleAlert && visibleAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      children: \"This is a success alert \\u2014 check it out!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4 shadow-none p-3 mb-5 bg-white rounded\",\n            children: [/*#__PURE__*/_jsxDEV(ProductSubTypeAdd, {\n              updateAction: ctx.updateAction,\n              errorMsg: ctx.errorMsg,\n              subType: ctx.subType,\n              handleInputChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ProductSubTypeControl, {\n              updateAction: ctx.updateAction,\n              setUpdateAction: ctx.setUpdateAction,\n              cancelButtonAction: cancelButtonAction,\n              formValid: ctx.formValid,\n              add: ctx.addProductSubType,\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), ctx.table.loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"loading \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 46\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8\",\n            children: /*#__PURE__*/_jsxDEV(TypeTable, {\n              setSubType: ctx.setSubType,\n              updateButtonAction: updateButtonAction,\n              subTypes: ctx.subTypes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductSubTypeContent, \"/H+mWHiIffTAoKEMyZ1Jz+Y3qfU=\");\n\n_c = ProductSubTypeContent;\nexport default ProductSubTypeContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductSubTypeContent\");","map":{"version":3,"sources":["/Users/User1/developer/onlineshop/src/pages/admin/content/ProductSubTypeContent.js"],"names":["React","TypeTable","ProductSubTypeAdd","ProductSubTypeControl","ProductSubTypeContext","validation","validatorTypes","handleInputChanger","Alert","ProductSubTypeContent","ctx","useContext","visibleAlert","setVisibleAlert","useState","handleInputChange","event","name","target","value","validationTypes","id","EQUAL","POSITIVENUMBER","size","NONE","validate","subTypes","subType","errorMsg","type","setSubType","setErrorMsg","formValid","setFormValid","updateButtonAction","subTypeModel","setUpdateAction","errorModel","cancelButtonAction","addProductSubType","checkError","updateAction","table","loading"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TypeTable from '../dataTable/ProductSubTypeTable'\nimport ProductSubTypeAdd from '../components/ProductSubTypeAdd'\nimport ProductSubTypeControl from '../components/Control'\nimport { ProductSubTypeContext } from '../../context/ProductSubTypeCtx'\nimport { validation, validatorTypes } from '../../util/validator'\nimport handleInputChanger from '../handleInputChanger'\nimport { Alert } from '@material-ui/core';\nconst ProductSubTypeContent = () => {\n    const ctx = React.useContext(ProductSubTypeContext);\n    const [visibleAlert, setVisibleAlert] = React.useState(false);\n    const handleInputChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        const validationTypes = {\n            id: validatorTypes.EQUAL,\n            name: validatorTypes.POSITIVENUMBER,\n            size: validatorTypes.NONE\n        };\n        const validate = validation(\n            value,\n            validationTypes[name],\n            name == \"id\" && ctx.subTypes\n        );\n        handleInputChanger(event, validate, null, null, ctx.subType, ctx.errorMsg\n            , (type) => ctx.setSubType(type), (errorMsg) => ctx.setErrorMsg(errorMsg), (formValid) => ctx.setFormValid(formValid));\n    }\n    const updateButtonAction = (subType) => {\n        ctx.setSubType({ ...ctx.subTypeModel, ...subType });\n        ctx.setUpdateAction(true);\n        ctx.setErrorMsg(ctx.errorModel);\n\n    }\n\n    const cancelButtonAction = () => {\n        ctx.setSubType(ctx.subTypeModel);\n        ctx.setFormValid(false);\n        ctx.setUpdateAction(false);\n        ctx.setErrorMsg(ctx.errorModel);\n    }\n    const addProductSubType = () => {\n\n        ctx.addProductSubType((checkError) => {\n            if (checkError) {\n                setVisibleAlert(true);\n            } else {\n                setVisibleAlert(true);\n            }\n        });\n    }\n    return (\n        <div className=\"content-wrapper\">\n            {visibleAlert &&\n                visibleAlert &&\n                <Alert severity=\"success\">This is a success alert — check it out!</Alert>}\n            <div className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-4 shadow-none p-3 mb-5 bg-white rounded\" >\n                            <ProductSubTypeAdd updateAction={ctx.updateAction} errorMsg={ctx.errorMsg} subType={ctx.subType} handleInputChange={handleInputChange}></ProductSubTypeAdd>\n                            <ProductSubTypeControl updateAction={ctx.updateAction} setUpdateAction={ctx.setUpdateAction}\n                                cancelButtonAction={cancelButtonAction}\n                                formValid={ctx.formValid} add={ctx.addProductSubType}> </ProductSubTypeControl>\n                        </div>\n                        {ctx.table.loading ? <p>loading </p> :\n                            <div className=\"col-8\"><TypeTable setSubType={ctx.setSubType} updateButtonAction={updateButtonAction} subTypes={ctx.subTypes}></TypeTable></div>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default ProductSubTypeContent;"]},"metadata":{},"sourceType":"module"}