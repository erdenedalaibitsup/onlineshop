{"ast":null,"code":"import _objectSpread from\"/Users/User1/developer/onlineshop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useState}from'react';import TypeTable from'../dataTable/ProductTypeTable';import ProductTypeAdd from'../components/ProductTypeAdd';import ProductTypeControl from'../components/Control';import{ProductTypeContext}from'../../context/ProductTypeCtx';import{validation,validatorTypes}from'../../util/validator';import handleInputChange from'../handleInputChanger';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProductTypeContent=function ProductTypeContent(){var ctx=React.useContext(ProductTypeContext);var handleInputChange=function handleInputChange(event){var validationTypes={id:validatorTypes.EQUAL,name:validatorTypes.POSITIVENUMBER,size:validatorTypes.NONE};handleInputChange(event,validationTypes,null,null,ctx.type,ctx.errorMsg,ctx.setType,ctx.setErrorMsg,ctx.setFormValid);// const target = event.target;\n// const value = target.value;\n// const name = target.name;\n// const validationTypes = {\n//     id: validatorTypes.EQUAL,\n//     name: validatorTypes.POSITIVENUMBER,\n//     size: validatorTypes.NONE\n// };\n// const validate = validation(\n//     value,\n//     validationTypes[name],\n//     name == \"id\" && ctx.types\n// );\n// let formValid = false;\n// const type = {\n//     ...ctx.type,\n//     [name]: value,\n// };\n// if (!validate.show) {\n//     let istemvavlid = true;\n//     Object.values(type).map((el, index) => {\n//         if (\n//             el.length === 0 &&\n//             Object.keys(ctx.type)[index] !== [name]\n//         ) {\n//             if (Object.keys(ctx.type)[index] !== 'size' && [name] !== 'size')\n//                 istemvavlid = false;\n//             return;\n//         }\n//     });\n//     if (istemvavlid) {\n//         formValid = true;\n//     }\n// }\n// const errorMsg = {\n//     ...ctx.errorMsg,\n//     [name]: validate,\n// }\n// ctx.setType(type);\n// ctx.setErrorMsg(errorMsg);\n// ctx.setFormValid(formValid);\n};var updateButtonAction=function updateButtonAction(type){ctx.setType(_objectSpread(_objectSpread({},ctx.typeModel),type));ctx.setUpdateAction(true);ctx.setErrorMsg(ctx.errorModel);};var cancelButtonAction=function cancelButtonAction(){ctx.setType(ctx.typeModel);ctx.setFormValid(false);ctx.setUpdateAction(false);ctx.setErrorMsg(ctx.errorModel);};return/*#__PURE__*/_jsx(\"div\",{className:\"content-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"content-header\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-4 shadow-none p-3 mb-5 bg-white rounded\",children:[/*#__PURE__*/_jsx(ProductTypeAdd,{updateAction:ctx.updateAction,errorMsg:ctx.errorMsg,type:ctx.type,handleInputChange:handleInputChange}),/*#__PURE__*/_jsx(ProductTypeControl,{updateAction:ctx.updateAction,setUpdateAction:ctx.setUpdateAction,cancelButtonAction:cancelButtonAction,formValid:ctx.formValid,add:ctx.addProduct,children:\" \"})]}),ctx.table.loading?/*#__PURE__*/_jsx(\"p\",{children:\"loading \"}):/*#__PURE__*/_jsx(\"div\",{className:\"col-8\",children:/*#__PURE__*/_jsx(TypeTable,{setType:ctx.setType,updateButtonAction:updateButtonAction,types:ctx.types})})]})})})});};export default ProductTypeContent;","map":{"version":3,"sources":["/Users/User1/developer/onlineshop/src/pages/admin/content/ProductTypeContent.js"],"names":["React","useState","TypeTable","ProductTypeAdd","ProductTypeControl","ProductTypeContext","validation","validatorTypes","handleInputChange","ProductTypeContent","ctx","useContext","event","validationTypes","id","EQUAL","name","POSITIVENUMBER","size","NONE","type","errorMsg","setType","setErrorMsg","setFormValid","updateButtonAction","typeModel","setUpdateAction","errorModel","cancelButtonAction","updateAction","formValid","addProduct","table","loading","types"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport TypeTable from '../dataTable/ProductTypeTable'\nimport ProductTypeAdd from '../components/ProductTypeAdd'\nimport ProductTypeControl from '../components/Control'\nimport { ProductTypeContext } from '../../context/ProductTypeCtx'\nimport { validation, validatorTypes } from '../../util/validator'\nimport handleInputChange from '../handleInputChanger'\nconst ProductTypeContent = () => {\n    const ctx = React.useContext(ProductTypeContext);\n    \n    const handleInputChange = (event) => {\n        const validationTypes = {\n            id: validatorTypes.EQUAL,\n            name: validatorTypes.POSITIVENUMBER,\n            size: validatorTypes.NONE\n        };\n    \n        handleInputChange(event, validationTypes, null, null, ctx.type, ctx.errorMsg\n            , ctx.setType, ctx.setErrorMsg, ctx.setFormValid);\n        // const target = event.target;\n        // const value = target.value;\n        // const name = target.name;\n        // const validationTypes = {\n        //     id: validatorTypes.EQUAL,\n        //     name: validatorTypes.POSITIVENUMBER,\n        //     size: validatorTypes.NONE\n        // };\n        // const validate = validation(\n        //     value,\n        //     validationTypes[name],\n        //     name == \"id\" && ctx.types\n        // );\n        // let formValid = false;\n        // const type = {\n        //     ...ctx.type,\n        //     [name]: value,\n        // };\n        // if (!validate.show) {\n        //     let istemvavlid = true;\n        //     Object.values(type).map((el, index) => {\n        //         if (\n        //             el.length === 0 &&\n        //             Object.keys(ctx.type)[index] !== [name]\n        //         ) {\n\n        //             if (Object.keys(ctx.type)[index] !== 'size' && [name] !== 'size')\n        //                 istemvavlid = false;\n        //             return;\n        //         }\n        //     });\n        //     if (istemvavlid) {\n        //         formValid = true;\n        //     }\n        // }\n        // const errorMsg = {\n        //     ...ctx.errorMsg,\n        //     [name]: validate,\n        // }\n\n\n        // ctx.setType(type);\n        // ctx.setErrorMsg(errorMsg);\n        // ctx.setFormValid(formValid);\n    }\n    const updateButtonAction = (type) => {\n        ctx.setType({ ...ctx.typeModel, ...type });\n        ctx.setUpdateAction(true);\n        ctx.setErrorMsg(ctx.errorModel);\n\n    }\n\n    const cancelButtonAction = () => {\n        ctx.setType(ctx.typeModel);\n        ctx.setFormValid(false);\n        ctx.setUpdateAction(false);\n        ctx.setErrorMsg(ctx.errorModel);\n    }\n    return (\n\n        <div className=\"content-wrapper\">\n            <div className=\"content-header\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-4 shadow-none p-3 mb-5 bg-white rounded\" >\n                            <ProductTypeAdd updateAction={ctx.updateAction} errorMsg={ctx.errorMsg} type={ctx.type} handleInputChange={handleInputChange}></ProductTypeAdd>\n                            <ProductTypeControl updateAction={ctx.updateAction} setUpdateAction={ctx.setUpdateAction}\n                                cancelButtonAction={cancelButtonAction}\n                                formValid={ctx.formValid} add={ctx.addProduct}> </ProductTypeControl>\n                        </div>\n                        {ctx.table.loading ? <p>loading </p> :\n                            <div className=\"col-8\"><TypeTable setType={ctx.setType} updateButtonAction={updateButtonAction} types={ctx.types}></TypeTable></div>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default ProductTypeContent;"]},"metadata":{},"sourceType":"module"}