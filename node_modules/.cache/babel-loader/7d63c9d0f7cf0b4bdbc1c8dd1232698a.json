{"ast":null,"code":"var _jsxFileName = \"/Users/User1/developer/onlineshop/src/pages/context/ProductCtx.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { getProductType } from './ProductTypeData/data';\nimport { productCon, productSubTypeCon, productTypeCon } from '../context/CollectionsName/names';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductContext = /*#__PURE__*/React.createContext();\nexport const ProductProvider = props => {\n  _s();\n\n  const productModel = {\n    id: \"1\",\n    link: \"\",\n    name: \"\",\n    size: \"\",\n    typeId: \"1\",\n    subTypeId: \"\"\n  };\n  const errorModel = {\n    id: {\n      show: false\n    },\n    link: {\n      show: false\n    },\n    name: {\n      show: false\n    },\n    size: {\n      show: false\n    },\n    typeId: {\n      show: false\n    },\n    subTypeId: {\n      show: false\n    }\n  };\n  let sizesModel = [{\n    id: \"XL\",\n    value: \"\",\n    state: \"\"\n  }, {\n    id: \"XXL\",\n    value: \"23\",\n    state: \"\"\n  }];\n  const [sizes, setSizes] = React.useState(sizesModel);\n  const [product, setProduct] = useState(productModel);\n  const [products, setProducts] = useState(null);\n  const [productTypes, setProductTypes] = useState([]);\n  const [productSubTypes, setProductSubTypes] = useState([]);\n  const [updateAction, setUpdateAction] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(errorModel);\n  const [event, setEvent] = useState({\n    loading: true,\n    error: false\n  });\n\n  const getProducts = async () => {\n    productCon.get().then(collections => {\n      const datas = collections.docs.map(product => product.data());\n      setTableLoading(datas, false, false);\n      console.log(\"datas\" + datas.length);\n    }).catch(ex => {\n      console.log(\"error\" + ex);\n      setTableLoading([], false, false);\n    });\n  };\n\n  const getProductTypes = async () => {\n    productTypeCon.get().then(collections => {\n      const datas = collections.docs.map(product => product.data());\n      setProductTypes(datas);\n      getProductSubTypes();\n      console.log(\"datas\" + datas.length);\n    }).catch(ex => {\n      console.log(\"error\" + ex);\n      setTableLoading([], false, false);\n    });\n  };\n\n  const getProductSubTypes = async () => {\n    productSubTypeCon.get().then(collections => {\n      const datas = collections.docs.map(product => product.data());\n      setProductSubTypes(datas);\n      console.log(\"datasSub\" + datas);\n    }).catch(ex => {\n      console.log(\"error\" + ex);\n    });\n  };\n\n  React.useEffect(() => {\n    getProductTypes();\n  }, []);\n  const [table, setTable] = useState({\n    loading: true,\n    error: false\n  });\n  const [formValid, setFormValid] = useState(false);\n\n  const addProduct = () => {\n    setTableLoading(products, true, false);\n    productCon.doc(product.id).set(product).then(collections => {\n      setProduct(productModel);\n      setUpdateAction(false);\n      setFormValid(false);\n      alert(updateAction ? \"Ажилттай заслаа\" : \"Ажилттай нэмлээ\");\n    }).catch(ex => {\n      console.log(\"error\" + ex);\n      setTableLoading(products, false, false);\n      alert(updateAction ? \"Засхад алдаа гарлаа \" : \"Нэмхэд алдаа гарлаа \");\n    });\n  };\n\n  const setEventLoading = (product, isLoading, error) => {\n    event.loading = isLoading;\n    event.error = error;\n    setProduct(product);\n    setEvent(event);\n    setProduct(productModel);\n    setFormValid(false);\n  };\n\n  const setTableLoading = (products, isLoading, error) => {\n    table.loading = isLoading;\n    table.error = error;\n    setTable(table);\n    setProducts(products);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: {\n      sizes,\n      setSizes,\n      errorModel,\n      productModel,\n      updateAction,\n      products,\n      table,\n      product,\n      productTypes,\n      productSubTypes,\n      errorMsg,\n      formValid,\n      event,\n      setErrorMsg,\n      setProduct,\n      setFormValid,\n      addProduct,\n      setUpdateAction,\n      getProducts\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProductProvider, \"UCo6nWsluELbTtELaFr8Ab7jFr8=\");\n\n_c = ProductProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"sources":["/Users/User1/developer/onlineshop/src/pages/context/ProductCtx.js"],"names":["React","useState","getProductType","productCon","productSubTypeCon","productTypeCon","ProductContext","createContext","ProductProvider","props","productModel","id","link","name","size","typeId","subTypeId","errorModel","show","sizesModel","value","state","sizes","setSizes","product","setProduct","products","setProducts","productTypes","setProductTypes","productSubTypes","setProductSubTypes","updateAction","setUpdateAction","errorMsg","setErrorMsg","event","setEvent","loading","error","getProducts","get","then","collections","datas","docs","map","data","setTableLoading","console","log","length","catch","ex","getProductTypes","getProductSubTypes","useEffect","table","setTable","formValid","setFormValid","addProduct","doc","set","alert","setEventLoading","isLoading","children"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { getProductType } from './ProductTypeData/data'\nimport { productCon, productSubTypeCon, productTypeCon } from '../context/CollectionsName/names'\nexport const ProductContext = React.createContext();\nexport const ProductProvider = (props) => {\n    const productModel = {\n        id: \"1\",\n        link: \"\",\n        name: \"\",\n        size: \"\",\n        typeId: \"1\",\n        subTypeId: \"\",\n    };\n    const errorModel =\n    {\n        id: { show: false },\n        link: { show: false },\n        name: { show: false },\n        size: { show: false },\n        typeId: { show: false },\n        subTypeId: { show: false },\n    }\n    let sizesModel = [\n        {\n            id: \"XL\",\n            value: \"\",\n            state: \"\"\n        },\n        {\n            id: \"XXL\",\n            value: \"23\",\n            state: \"\"\n        },\n    ]\n    const [sizes, setSizes] = React.useState(sizesModel)\n    const [product, setProduct] = useState(productModel);\n    const [products, setProducts] = useState(null);\n    const [productTypes, setProductTypes] = useState([]);\n    const [productSubTypes, setProductSubTypes] = useState([]);\n    const [updateAction, setUpdateAction] = useState(false);\n    const [errorMsg, setErrorMsg] = useState(errorModel);\n    const [event, setEvent] = useState({\n        loading: true,\n        error: false\n    });\n\n    const getProducts = async () => {\n        productCon.get().then((collections) => {\n            const datas = collections.docs.map((product) => product.data());\n            setTableLoading(datas, false, false);\n            console.log(\"datas\" + datas.length);\n        }).catch((ex) => {\n            console.log(\"error\" + ex);\n            setTableLoading([], false, false);\n        });\n\n    }\n    const getProductTypes = async () => {\n        productTypeCon.get().then((collections) => {\n            const datas = collections.docs.map((product) => product.data());\n            setProductTypes(datas);\n            getProductSubTypes();\n            console.log(\"datas\" + datas.length);\n        }).catch((ex) => {\n            console.log(\"error\" + ex);\n            setTableLoading([], false, false);\n        });\n    }\n\n    const getProductSubTypes = async () => {\n        productSubTypeCon.get().then((collections) => {\n            const datas = collections.docs.map((product) => product.data());\n            setProductSubTypes(datas);\n            console.log(\"datasSub\" + datas);\n        }).catch((ex) => {\n            console.log(\"error\" + ex);\n\n        });\n    }\n\n    React.useEffect(() => {\n        getProductTypes();\n    }, [])\n    const [table, setTable] = useState({\n        loading: true,\n        error: false\n    });\n    const [formValid, setFormValid] = useState(false);\n\n\n\n\n    const addProduct = () => {\n        setTableLoading(products, true, false);\n        productCon.doc(product.id).set(product).then((collections) => {\n            setProduct(productModel);\n            setUpdateAction(false);\n            setFormValid(false);\n            alert(updateAction ? \"Ажилттай заслаа\" : \"Ажилттай нэмлээ\");\n\n        }).catch((ex) => {\n            console.log(\"error\" + ex);\n            setTableLoading(products, false, false);\n            alert(updateAction ? \"Засхад алдаа гарлаа \" : \"Нэмхэд алдаа гарлаа \");\n        });\n\n    }\n\n    const setEventLoading = (product, isLoading, error) => {\n        event.loading = isLoading;\n        event.error = error;\n        setProduct(product);\n        setEvent(event);\n        setProduct(productModel);\n        setFormValid(false);\n    }\n\n    const setTableLoading = (products, isLoading, error) => {\n        table.loading = isLoading;\n        table.error = error;\n        setTable(table);\n        setProducts(products);\n    }\n\n\n\n    return <ProductContext.Provider value={{ sizes, setSizes, errorModel, productModel, updateAction, products, table, product, productTypes, productSubTypes, errorMsg, formValid, event, setErrorMsg, setProduct, setFormValid, addProduct, setUpdateAction, getProducts }}>{props.children}</ProductContext.Provider>\n}"]},"metadata":{},"sourceType":"module"}