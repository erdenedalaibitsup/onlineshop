{"ast":null,"code":"var _jsxFileName = \"/Users/User1/developer/onlineshop/src/pages/context/ProductTypeCtx.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport firebase from '../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductTypeContext = /*#__PURE__*/React.createContext();\nexport const ProductTypeProvider = props => {\n  _s();\n\n  const typeModel = {\n    id: \"\",\n    name: \"\"\n  };\n  const errorModel = {\n    id: {\n      show: false\n    },\n    name: {\n      show: false\n    }\n  };\n  const [type, setType] = useState(typeModel);\n  const [types, setTypes] = useState(null);\n  const [updateAction, setUpdateAction] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(errorModel);\n  const [event, setEvent] = useState({\n    loading: true,\n    error: false\n  });\n  const [table, setTable] = useState({\n    loading: true,\n    error: false\n  });\n  const [formValid, setFormValid] = useState(false);\n  React.useEffect(() => {\n    getProductType();\n  }, []);\n\n  const getProductType = () => {\n    productTypeCon.get().then(collections => {\n      const datas = collections.docs.map(type => type.data());\n      setTableLoading(datas, false, false);\n      console.log(\"datas\" + datas.length);\n    }).catch(ex => {\n      console.log(\"error\" + ex);\n      setTableLoading([], false, false);\n    });\n  };\n\n  const addProductType = () => {\n    setTableLoading(types, true, false);\n    productTypeCon.doc(type.id).set(type).then(collections => {\n      getProductType();\n      setType({\n        id: \"\",\n        name: \"\"\n      });\n      setUpdateAction(false);\n      alert(updateAction ? \"Ажилттай заслаа\" : \"Ажилттай нэмлээ\");\n    }).catch(ex => {\n      console.log(\"error\" + ex);\n      setTableLoading(types, false, false);\n      alert(updateAction ? \"Засхад алдаа гарлаа \" : \"Нэмхэд алдаа гарлаа \");\n    });\n  };\n\n  const setEventLoading = (type, isLoading, error) => {\n    event.loading = isLoading;\n    event.error = error;\n    setType(type);\n    setEvent(event);\n    setType({\n      id: \"\",\n      name: \"\"\n    });\n    setFormValid(false);\n  };\n\n  const setTableLoading = (types, isLoading, error) => {\n    table.loading = isLoading;\n    table.error = error;\n    setTable(table);\n    setTypes(types);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductTypeContext.Provider, {\n    value: {\n      errorModel,\n      typeModel,\n      updateAction,\n      types,\n      table,\n      type,\n      errorMsg,\n      formValid,\n      event,\n      setErrorMsg,\n      setType,\n      setFormValid,\n      addProductType,\n      setUpdateAction\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProductTypeProvider, \"OGN/3SC/WIK2oA63s4cp9tF0Jog=\");\n\n_c = ProductTypeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductTypeProvider\");","map":{"version":3,"sources":["/Users/User1/developer/onlineshop/src/pages/context/ProductTypeCtx.js"],"names":["React","useState","firebase","ProductTypeContext","createContext","ProductTypeProvider","props","typeModel","id","name","errorModel","show","type","setType","types","setTypes","updateAction","setUpdateAction","errorMsg","setErrorMsg","event","setEvent","loading","error","table","setTable","formValid","setFormValid","useEffect","getProductType","productTypeCon","get","then","collections","datas","docs","map","data","setTableLoading","console","log","length","catch","ex","addProductType","doc","set","alert","setEventLoading","isLoading","children"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport firebase from '../../firebase'\n\nexport const ProductTypeContext = React.createContext();\nexport const ProductTypeProvider = (props) => {\n    const typeModel = {\n        id: \"\",\n        name: \"\",\n    };\n    const errorModel =\n    {\n        id: { show: false },\n        name: { show: false }\n    }\n\n    const [type, setType] = useState(typeModel);\n    const [types, setTypes] = useState(null);\n\n    const [updateAction, setUpdateAction] = useState(false);\n    const [errorMsg, setErrorMsg] = useState(errorModel);\n    const [event, setEvent] = useState({\n        loading: true,\n        error: false\n    });\n\n    const [table, setTable] = useState({\n        loading: true,\n        error: false\n    });\n    const [formValid, setFormValid] = useState(false);\n\n    React.useEffect(() => {\n        getProductType();\n    }, []);\n\n    const getProductType = () => {\n        productTypeCon.get().then((collections) => {\n            const datas = collections.docs.map((type) => type.data());\n            setTableLoading(datas, false, false);\n            console.log(\"datas\" + datas.length);\n        }).catch((ex) => {\n            console.log(\"error\" + ex);\n            setTableLoading([], false, false);\n        });\n    }\n\n    const addProductType = () => {\n        setTableLoading(types, true, false);\n        productTypeCon.doc(type.id).set(type).then((collections) => {\n            getProductType();\n            setType({ id: \"\", name: \"\" });\n            setUpdateAction(false);\n            alert(updateAction ? \"Ажилттай заслаа\" : \"Ажилттай нэмлээ\");\n\n        }).catch((ex) => {\n            console.log(\"error\" + ex);\n            setTableLoading(types, false, false);\n            alert(updateAction ? \"Засхад алдаа гарлаа \" : \"Нэмхэд алдаа гарлаа \");\n        });\n\n    }\n\n    const setEventLoading = (type, isLoading, error) => {\n        event.loading = isLoading;\n        event.error = error;\n        setType(type);\n        setEvent(event);\n        setType({\n            id: \"\",\n            name: \"\"\n        });\n        setFormValid(false);\n    }\n\n    const setTableLoading = (types, isLoading, error) => {\n        table.loading = isLoading;\n        table.error = error;\n        setTable(table);\n        setTypes(types);\n    }\n\n\n\n    return <ProductTypeContext.Provider value={{ errorModel, typeModel, updateAction, types, table, type, errorMsg, formValid, event, setErrorMsg, setType, setFormValid, addProductType, setUpdateAction }}>{props.children}</ProductTypeContext.Provider>\n}"]},"metadata":{},"sourceType":"module"}