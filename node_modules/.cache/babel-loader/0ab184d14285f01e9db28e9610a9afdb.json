{"ast":null,"code":"var _jsxFileName = \"/Users/User1/developer/onlineshop/src/pages/context/ProductTypeCtx.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport firebase from '../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  types: [{\n    id: \"\",\n    name: \"\"\n  }],\n  type: {\n    id: \"\",\n    name: \"\"\n  },\n  table: {\n    loading: true,\n    error: false\n  },\n  event: {\n    loading: true,\n    error: false\n  }\n};\nconst productTypeCon = firebase.firestore().collection('productType');\nexport const ProductTypeContext = /*#__PURE__*/React.createContext();\nexport const ProductTypeProvider = props => {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  React.useEffect(() => {\n    getProductType();\n  }, []);\n\n  const getProductType = () => {\n    productTypeCon.get().then(collections => {\n      const datas = collections.docs.map(type => type.data());\n      setTableLoading(datas, false, false);\n      console.log(\"datas\" + datas.length);\n    }).catch(ex => {\n      console.log(\"error\" + ex);\n      setTableLoading([], false, false);\n    });\n  };\n\n  const addProductType = type => {\n    console.log(\"type\", type);\n  };\n\n  const setEventLoading = (type, isLoading, error) => {\n    setState({\n      [state.table.loading]: isLoading,\n      types: type,\n      [state.table.error]: error\n    });\n  };\n\n  const setTableLoading = (types, isLoading, error) => {\n    setState({\n      [state.table.loading]: isLoading,\n      types: types,\n      [state.table.error]: error\n    });\n  };\n\n  const databaseUpdate = type => {\n    productTypeCon.doc(String(type.id)).set().then(res => {\n      alert(\"amjilttal nemlee\");\n    }).catch(ex => console.log(\"aldaa garlaa\") + ex).finally(ex => {\n      getProductType();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductTypeContext.Provider, {\n    value: {\n      state,\n      addProductType\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProductTypeProvider, \"g9yWDQF6ixWa1r5sfsm7YAeGJG4=\");\n\n_c = ProductTypeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductTypeProvider\");","map":{"version":3,"sources":["/Users/User1/developer/onlineshop/src/pages/context/ProductTypeCtx.js"],"names":["React","useState","firebase","initialState","types","id","name","type","table","loading","error","event","productTypeCon","firestore","collection","ProductTypeContext","createContext","ProductTypeProvider","props","state","setState","useEffect","getProductType","get","then","collections","datas","docs","map","data","setTableLoading","console","log","length","catch","ex","addProductType","setEventLoading","isLoading","databaseUpdate","doc","String","set","res","alert","finally","children"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport firebase from '../../firebase'\n\nconst initialState = {\n    types: [\n        {\n            id: \"\",\n            name: \"\"\n        }\n    ],\n    type: {\n        id: \"\",\n        name: \"\"\n    },\n    table: {\n        loading: true,\n        error: false\n    },\n    event: {\n        loading: true,\n        error: false\n    },\n}\nconst productTypeCon = firebase.firestore().collection('productType');\nexport const ProductTypeContext = React.createContext();\nexport const ProductTypeProvider = (props) => {\n    const [state, setState] = useState(initialState);\n    React.useEffect(() => {\n        getProductType();\n    }, []);\n    const getProductType = () => {\n        productTypeCon.get().then((collections) => {\n            const datas = collections.docs.map((type) => type.data());\n            setTableLoading(datas, false, false);\n            console.log(\"datas\" + datas.length);\n        }).catch((ex) => {\n            console.log(\"error\" + ex);\n            setTableLoading([], false, false);\n\n        })\n    }\n\n    const addProductType = (type) => {\n        console.log(\"type\", type);\n    }\n\n    const setEventLoading = (type, isLoading, error) => {\n        setState({ [state.table.loading]: isLoading, types: type, [state.table.error]: error });\n    }\n\n    const setTableLoading = (types, isLoading, error) => {\n        setState({ [state.table.loading]: isLoading, types: types, [state.table.error]: error });\n    }\n    const databaseUpdate = (type) => {\n        productTypeCon.doc(String(type.id)).set().then((res) => {\n            alert(\"amjilttal nemlee\");\n\n        }).catch((ex) => console.log(\"aldaa garlaa\") + ex).finally(ex => {\n            getProductType();\n        });\n    }\n    return <ProductTypeContext.Provider value={{ state, addProductType }}>{props.children}</ProductTypeContext.Provider>\n}"]},"metadata":{},"sourceType":"module"}