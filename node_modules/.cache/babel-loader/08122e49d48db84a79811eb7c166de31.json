{"ast":null,"code":"var _jsxFileName = \"/Users/User1/developer/onlineshop/src/pages/context/ProductTypeCtx.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport firebase from '../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  types: [{\n    id: \"\",\n    name: \"\"\n  }],\n  type: {\n    id: \"\",\n    name: \"\"\n  },\n  loading: true,\n  error: false\n};\nconst productTypeCon = firebase.firestore().collection('productType');\nexport const ProductTypeContext = /*#__PURE__*/React.createContext();\nexport const ProductTypeProvider = props => {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  React.useEffect(() => {\n    getProductType();\n  }, []);\n\n  const getProductType = () => {\n    productTypeCon.get().then(collections => {\n      const datas = collections.docs.map(type => type.data());\n      console.log(\"datas\" + datas.length);\n      setState({\n        loading: false,\n        types: datas,\n        error: false\n      });\n    }).catch(ex => {\n      console.log(\"error\" + ex);\n      setState({\n        loading: false,\n        types: [{\n          \"id\": 1,\n          \"name\": \"umd\"\n        }],\n        error: true\n      });\n    });\n  };\n\n  const addProductType = type => {\n    databaseUpdate(type);\n  };\n\n  const databaseUpdate = type => {\n    productTypeCon.doc(String(type.id)).set().then(res => {\n      alert(\"amjilttal nemlee\");\n    }).catch(ex => console.log(\"aldaa garlaa\") + ex).finally(ex => {\n      getProductType();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductTypeContext.Provider, {\n    value: {\n      state,\n      addProductType\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProductTypeProvider, \"g9yWDQF6ixWa1r5sfsm7YAeGJG4=\");\n\n_c = ProductTypeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductTypeProvider\");","map":{"version":3,"sources":["/Users/User1/developer/onlineshop/src/pages/context/ProductTypeCtx.js"],"names":["React","useState","firebase","initialState","types","id","name","type","loading","error","productTypeCon","firestore","collection","ProductTypeContext","createContext","ProductTypeProvider","props","state","setState","useEffect","getProductType","get","then","collections","datas","docs","map","data","console","log","length","catch","ex","addProductType","databaseUpdate","doc","String","set","res","alert","finally","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CACH;AACIC,IAAAA,EAAE,EAAE,EADR;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADG,CADU;AAOjBC,EAAAA,IAAI,EAAE;AACFF,IAAAA,EAAE,EAAE,EADF;AAEFC,IAAAA,IAAI,EAAE;AAFJ,GAPW;AAWjBE,EAAAA,OAAO,EAAE,IAXQ;AAYjBC,EAAAA,KAAK,EAAE;AAZU,CAArB;AAcA,MAAMC,cAAc,GAAGR,QAAQ,CAACS,SAAT,GAAqBC,UAArB,CAAgC,aAAhC,CAAvB;AACA,OAAO,MAAMC,kBAAkB,gBAAGb,KAAK,CAACc,aAAN,EAA3B;AACP,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAACE,YAAD,CAAlC;AACAH,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AAClBC,IAAAA,cAAc;AACjB,GAFD,EAEG,EAFH;;AAGA,QAAMA,cAAc,GAAG,MAAM;AACzBV,IAAAA,cAAc,CAACW,GAAf,GAAqBC,IAArB,CAA2BC,WAAD,IAAiB;AACvC,YAAMC,KAAK,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,GAAjB,CAAsBnB,IAAD,IAAUA,IAAI,CAACoB,IAAL,EAA/B,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUL,KAAK,CAACM,MAA5B;AACAZ,MAAAA,QAAQ,CAAC;AAAEV,QAAAA,OAAO,EAAE,KAAX;AAAkBJ,QAAAA,KAAK,EAAEoB,KAAzB;AAAgCf,QAAAA,KAAK,EAAE;AAAvC,OAAD,CAAR;AACH,KAJD,EAIGsB,KAJH,CAIUC,EAAD,IAAQ;AACbJ,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUG,EAAtB;AACAd,MAAAA,QAAQ,CAAC;AAAEV,QAAAA,OAAO,EAAE,KAAX;AAAkBJ,QAAAA,KAAK,EAAE,CAAC;AAAE,gBAAM,CAAR;AAAW,kBAAQ;AAAnB,SAAD,CAAzB;AAAuDK,QAAAA,KAAK,EAAE;AAA9D,OAAD,CAAR;AAEH,KARD;AASH,GAVD;;AAYA,QAAMwB,cAAc,GAAI1B,IAAD,IAAU;AAC7B2B,IAAAA,cAAc,CAAC3B,IAAD,CAAd;AACH,GAFD;;AAGA,QAAM2B,cAAc,GAAI3B,IAAD,IAAU;AAC7BG,IAAAA,cAAc,CAACyB,GAAf,CAAmBC,MAAM,CAAC7B,IAAI,CAACF,EAAN,CAAzB,EAAoCgC,GAApC,GAA0Cf,IAA1C,CAAgDgB,GAAD,IAAS;AACpDC,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACH,KAFD,EAEGR,KAFH,CAEUC,EAAD,IAAQJ,OAAO,CAACC,GAAR,CAAY,cAAZ,IAA8BG,EAF/C,EAEmDQ,OAFnD,CAE2DR,EAAE,IAAI;AAC7DZ,MAAAA,cAAc;AACjB,KAJD;AAKH,GAND;;AAOA,sBAAO,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAAEH,MAAAA,KAAF;AAASgB,MAAAA;AAAT,KAApC;AAAA,cAAgEjB,KAAK,CAACyB;AAAtE;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA5BM;;GAAM1B,mB;;KAAAA,mB","sourcesContent":["import React, { useState } from 'react';\nimport firebase from '../../firebase'\nconst initialState = {\n    types: [\n        {\n            id: \"\",\n            name: \"\"\n        }\n    ],\n    type: {\n        id: \"\",\n        name: \"\"\n    },\n    loading: true,\n    error: false\n}\nconst productTypeCon = firebase.firestore().collection('productType');\nexport const ProductTypeContext = React.createContext();\nexport const ProductTypeProvider = (props) => {\n    const [state, setState] = useState(initialState);\n    React.useEffect(() => {\n        getProductType();\n    }, []);\n    const getProductType = () => {\n        productTypeCon.get().then((collections) => {\n            const datas = collections.docs.map((type) => type.data());\n            console.log(\"datas\" + datas.length);\n            setState({ loading: false, types: datas, error: false });\n        }).catch((ex) => {\n            console.log(\"error\" + ex);\n            setState({ loading: false, types: [{ \"id\": 1, \"name\": \"umd\" }], error: true });\n\n        })\n    }\n\n    const addProductType = (type) => {\n        databaseUpdate(type);\n    }\n    const databaseUpdate = (type) => {\n        productTypeCon.doc(String(type.id)).set().then((res) => {\n            alert(\"amjilttal nemlee\");\n        }).catch((ex) => console.log(\"aldaa garlaa\") + ex).finally(ex => {\n            getProductType();\n        });\n    }\n    return <ProductTypeContext.Provider value={{ state, addProductType }}>{props.children}</ProductTypeContext.Provider>\n}"]},"metadata":{},"sourceType":"module"}